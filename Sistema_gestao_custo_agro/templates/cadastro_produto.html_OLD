{% extends "base.html" %}
{% block title %}Cadastro de Produtos{% endblock %}
{% block content %}

<head>
    <link rel="apple-touch-icon" sizes="180x180" href="{{ url_for('static', filename='apple-touch-icon.png') }}">
    <link rel="icon" type="image/png" sizes="32x32" href="{{ url_for('static', filename='favicon-32x32.png') }}">
    <link rel="icon" type="image/png" sizes="16x16" href="{{ url_for('static', filename='favicon-16x16.png') }}">
    <link rel="manifest" href="{{ url_for('static', filename='site.webmanifest') }}">

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestão de Produtos</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f4f4;
            margin: auto;
            padding: 0;
        }
    
        .container {
            max-width: 1200px;
            margin: auto;
            padding: 15px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        }
    
        h2 {
            text-align: center;
            color: #333;
            margin-bottom: auto;
            font-size: clamp(1.5rem, 2.5vw, 2.5rem);
        }
    
        .table-responsive {
            overflow-x: auto;
            margin-top: auto;
            border: 1px solid #ddd;
            border-radius: 8px;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        }
    
        table {
            width: 100%;
            border-collapse: collapse;
        }
    
        th, td {
            padding: 10px;
            text-align: left;
            border: 1px solid #ddd;
            overflow-wrap: break-word;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
    
        thead th {
            background-color: #343a40;
            color: white;
            font-size: clamp(0.8rem, 1.2vw, 1rem);
        }
    
        tbody td {
            font-size: clamp(0.7rem, 1vw, 0.9rem);
        }
    
        tbody tr:nth-child(even) {
            background-color: #f8f9fa;
        }
    
        tbody tr:hover {
            background-color: #e9ecef;
        }
    
        button {
            margin: 0 5px;
            font-size: clamp(0.7rem, 1vw, 0.9rem);
        }
    
        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }
    
            table {
                font-size: 0.8rem;
            }
        }

        .currency-input:focus {
            background-color: #f8f9ff;
        }
    </style>
    
    <script>
        // Função para formatar valor monetário
        function formatarMoeda(input) {
            let value = input.value.replace(/\D/g, '');
            value = (parseInt(value) / 100).toFixed(2);
            input.value = value;
        }

        // Função para calcular o total gasto
        function calcularTotal() {
            const quantidade = parseFloat(document.getElementById('quantidade').value) || 0;
            const valorProduto = parseFloat(document.getElementById('valor_produto').value) || 0;
            const totalGasto = quantidade * valorProduto;
            
            document.getElementById('total_gasto').value = totalGasto.toFixed(2);
        }

        // Função para pesquisar produtos
        function pesquisarDinamico() {
            const campoPesquisa = document.getElementById("campoPesquisa");
            let termoPesquisa = campoPesquisa.value.trim();
            
            // Se o campo estiver vazio, recarrega a página
            if (termoPesquisa === "") {
                location.reload();
                return;
            }

            // Faz a requisição para o backend
            fetch(`/buscar_produtos?query=${encodeURIComponent(termoPesquisa)}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Erro na requisição: ${response.statusText}`);
                    }
                    return response.json();
                })
                .then(produtos => {
                    atualizarTabela(produtos);
                })
                .catch(error => {
                    console.error("Erro ao buscar produtos:", error);
                    alert("Erro ao realizar a busca. Por favor, tente novamente.");
                });
        }

        // Função para atualizar a tabela com os resultados
        function atualizarTabela(produtos) {
            const tbody = document.querySelector("tbody");
            tbody.innerHTML = ""; // Limpa a tabela

            if (!produtos || produtos.length === 0) {
                const linhaVazia = document.createElement("tr");
                linhaVazia.innerHTML = `<td colspan="11" class="text-center">Nenhum produto encontrado.</td>`;
                tbody.appendChild(linhaVazia);
                return;
            }

            produtos.forEach(produto => {
                const linha = document.createElement("tr");
                // Formatar datas para exibição
                const dataCompra = new Date(produto.data_compra).toLocaleDateString('pt-BR');
                const dataValidade = produto.validade_produto ? new Date(produto.validade_produto).toLocaleDateString('pt-BR') : '-';
                
                linha.innerHTML = `
                    <td>${produto.id}</td>
                    <td>${produto.nome_produto}</td>
                    <td>${produto.fornecedor}</td>
                    <td>${dataCompra}</td>
                    <td>${dataValidade}</td>
                    <td>${produto.quantidade.toFixed(2)}</td>
                    <td>${produto.unidade_medida}</td>
                    <td>R$ ${produto.valor_produto.toFixed(2)}</td>
                    <td>R$ ${produto.total_gasto.toFixed(2)}</td>
                    <td>${produto.quantidade_disponivel.toFixed(2)}</td>
                    <td class="text-center">
                        <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#alterarModal" 
                                onclick="preencherModal(${produto.id}, '${produto.nome_produto}', '${produto.fornecedor}', 
                                                        '${produto.data_compra.split('T')[0]}', 
                                                        '${produto.validade_produto ? produto.validade_produto.split('T')[0] : ''}', 
                                                        ${produto.quantidade}, '${produto.unidade_medida}', 
                                                        ${produto.valor_produto}, ${produto.total_gasto}, 
                                                        ${produto.quantidade_disponivel})">
                            Alterar
                        </button>
                        <button class="btn btn-sm btn-danger" onclick="confirmDelete(${produto.id})">
                            Deletar
                        </button>
                    </td>
                `;
                tbody.appendChild(linha);
            });
        }

        // Função para preencher o modal de alteração
        function preencherModal(id, nome, fornecedor, dataCompra, validade, quantidade, unidadeMedida, valor, totalGasto, quantidadeDisponivel) {
            document.getElementById('modalId').value = id;
            document.getElementById('modalNome').value = nome;
            document.getElementById('modalFornecedor').value = fornecedor;
            document.getElementById('modalDataCompra').value = dataCompra;
            document.getElementById('modalValidade').value = validade;
            document.getElementById('modalQuantidade').value = quantidade;
            document.getElementById('modalUnidadeMedida').value = unidadeMedida;
            document.getElementById('modalValorProduto').value = valor;
            document.getElementById('modalTotalGasto').value = totalGasto;
            document.getElementById('modalQuantidadeDisponivel').value = quantidadeDisponivel;
            
            // Atualiza o total se os valores forem alterados
            calcularTotalModal();
        }

        // Calcular total no modal de alteração
        function calcularTotalModal() {
            const quantidade = parseFloat(document.getElementById('modalQuantidade').value) || 0;
            const valorProduto = parseFloat(document.getElementById('modalValorProduto').value) || 0;
            const totalGasto = quantidade * valorProduto;
            
            document.getElementById('modalTotalGasto').value = totalGasto.toFixed(2);
        }

        // Confirmação para deletar produto
        function confirmDelete(id) {
            if (confirm("Tem certeza que deseja excluir este produto?")) {
                document.getElementById('deleteForm' + id).submit();
            } else {
                return false;
            }
        }

        // Event listeners
        document.addEventListener('DOMContentLoaded', function() {
            const campoPesquisa = document.getElementById("campoPesquisa");
            
            // Listener para tecla Enter
            campoPesquisa.addEventListener("keypress", function(event) {
                if (event.key === "Enter") {
                    pesquisarDinamico();
                }
            });
        });
    </script>

    {% with messages = get_flashed_messages(with_categories=true) %}
    {% if messages %}
        <div class="container mt-3">
            {% for category, message in messages %}
                <div class="alert alert-{{ category }}" role="alert">
                    {{ message }}
                </div>
            {% endfor %}
        </div>
    {% endif %}
{% endwith %}

    <body>
        <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap">
            <h2>Gestão de Produtos</h2>
            
            <div class="input-group w-50">
                <input 
                    type="text" 
                    id="campoPesquisa" 
                    class="form-control" 
                    placeholder="Pesquise por nome ou fornecedor" 
                />
            </div>
        
            <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#cadastroModal">
                Novo Produto
            </button>
        </div>
        
        {% if produtos %}
        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead class="table-dark">
                    <tr>
                        <th>ID</th>
                        <th>Nome do Produto</th>
                        <th>Fornecedor</th>
                        <th>Data Compra</th>
                        <th>Validade</th>
                        <th>Quantidade</th>
                        <th>Unidade</th>
                        <th>Valor Unitário</th>
                        <th>Total Gasto</th>
                        <th>Qtd. Disponível</th>
                        <th class="text-center">Ações</th>
                    </tr>
                </thead>
                <tbody>
                    {% for produto in produtos %}
                    <tr>
                        <td>{{ produto.id }}</td>
                        <td>{{ produto.nome_produto }}</td>
                        <td>{{ produto.fornecedor }}</td>
                        <td>{{ produto.data_compra.split('T')[0] }}</td>
                        <td>{{ produto.validade_produto.split('T')[0] if produto.validade_produto else '-' }}</td>
                        <td>{{ "%.2f"|format(produto.quantidade) }}</td>
                        <td>{{ produto.unidade_medida }}</td>
                        <td>R$ {{ "%.2f"|format(produto.valor_produto) }}</td>
                        <td>R$ {{ "%.2f"|format(produto.total_gasto) }}</td>
                        <td>{{ "%.2f"|format(produto.quantidade_disponivel) }}</td>
                        <td class="text-center">
                            <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#alterarModal" 
                                    onclick="preencherModal({{ produto.id }}, '{{ produto.nome_produto }}', '{{ produto.fornecedor }}', 
                                                          '{{ produto.data_compra.split('T')[0] }}', 
                                                          '{{ produto.validade_produto.split('T')[0] if produto.validade_produto else '' }}', 
                                                          {{ produto.quantidade }}, '{{ produto.unidade_medida }}', 
                                                          {{ produto.valor_produto }}, {{ produto.total_gasto }}, 
                                                          {{ produto.quantidade_disponivel }})">
                                Alterar
                            </button>
                            <form id="deleteForm{{ produto.id }}" method="POST" action="{{ url_for('cadastro_produto.deletar_produto', produto_id=produto.id) }}" class="d-inline">
                                <button type="button" class="btn btn-sm btn-danger" onclick="confirmDelete({{ produto.id }})">
                                    Deletar
                                </button>
                            </form>
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
        {% else %}
        <div class="alert alert-info text-center">Não há produtos cadastrados no momento.</div>
        {% endif %}
        
        <!-- Modal de Cadastro -->
        <div class="modal fade" id="cadastroModal" tabindex="-1" aria-labelledby="cadastroModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="cadastroModalLabel">Novo Produto</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    
                    <div class="modal-body">
                        <form method="POST" action="{{ url_for('cadastro_produto.salvar_produto') }}">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="nome_produto" class="form-label">Nome do Produto</label>
                                    <input type="text" class="form-control" id="nome_produto" name="nome_produto" required 
                                           oninput="this.value = this.value.toUpperCase();">
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="fornecedor" class="form-label">Fornecedor</label>
                                    <input type="text" class="form-control" id="fornecedor" name="fornecedor" required 
                                           oninput="this.value = this.value.toUpperCase();">
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="data_compra" class="form-label">Data de Compra</label>
                                    <input type="date" class="form-control" id="data_compra" name="data_compra" required>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="validade_produto" class="form-label">Data de Validade</label>
                                    <input type="date" class="form-control" id="validade_produto" name="validade_produto">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="quantidade" class="form-label">Quantidade</label>
                                    <input type="number" class="form-control" id="quantidade" name="quantidade" step="0.01" required 
                                           onchange="calcularTotal()">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="unidade_medida" class="form-label">Unidade de Medida</label>
                                    <select class="form-select" id="unidade_medida" name="unidade_medida" required>
                                        <option value="">Selecione</option>
                                        <option value="UNIDADE">Unidade</option>
                                        <option value="CAIXA">Caixa</option>
                                        <option value="PACOTE">Pacote</option>
                                        <option value="KG">Kg</option>
                                        <option value="LITRO">Litro</option>
                                        <option value="METRO">Metro</option>
                                        <option value="PECA">Peça</option>
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="valor_produto" class="form-label">Valor Unitário (R$)</label>
                                    <input type="number" class="form-control currency-input" id="valor_produto" name="valor_produto" 
                                           step="0.01" required onchange="calcularTotal()">
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="total_gasto" class="form-label">Total Gasto (R$)</label>
                                    <input type="number" class="form-control" id="total_gasto" readonly step="0.01">
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="quantidade_disponivel" class="form-label">Quantidade Disponível</label>
                                    <input type="number" class="form-control" id="quantidade_disponivel" name="quantidade_disponivel" step="0.01" required>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                                <button type="submit" class="btn btn-primary">Salvar</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Modal para Alterar Produto -->
        <div class="modal fade" id="alterarModal" tabindex="-1" aria-labelledby="alterarModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="alterarModalLabel">Alterar Produto</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form method="POST" action="{{ url_for('cadastro_produto.alterar_produto') }}">
                        <div class="modal-body">
                            <input type="hidden" id="modalId" name="id">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label for="modalNome" class="form-label">Nome do Produto</label>
                                    <input type="text" class="form-control" id="modalNome" name="nome_produto" required 
                                           oninput="this.value = this.value.toUpperCase();">
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="modalFornecedor" class="form-label">Fornecedor</label>
                                    <input type="text" class="form-control" id="modalFornecedor" name="fornecedor" required 
                                           oninput="this.value = this.value.toUpperCase();">
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="modalDataCompra" class="form-label">Data de Compra</label>
                                    <input type="date" class="form-control" id="modalDataCompra" name="data_compra" required>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="modalValidade" class="form-label">Data de Validade</label>
                                    <input type="date" class="form-control" id="modalValidade" name="validade_produto">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="modalQuantidade" class="form-label">Quantidade</label>
                                    <input type="number" class="form-control" id="modalQuantidade" name="quantidade" step="0.01" required 
                                           onchange="calcularTotalModal()">
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="modalUnidadeMedida" class="form-label">Unidade de Medida</label>
                                    <select class="form-select" id="modalUnidadeMedida" name="unidade_medida" required>
                                        <option value="">Selecione</option>
                                        <option value="UNIDADE">Unidade</option>
                                        <option value="CAIXA">Caixa</option>
                                        <option value="PACOTE">Pacote</option>
                                        <option value="KG">Kg</option>
                                        <option value="LITRO">Litro</option>
                                        <option value="METRO">Metro</option>
                                        <option value="PECA">Peça</option>
                                    </select>
                                </div>
                                <div class="col-md-4 mb-3">
                                    <label for="modalValorProduto" class="form-label">Valor Unitário (R$)</label>
                                    <input type="number" class="form-control currency-input" id="modalValorProduto" name="valor_produto" 
                                           step="0.01" required onchange="calcularTotalModal()">
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="modalTotalGasto" class="form-label">Total Gasto (R$)</label>
                                    <input type="number" class="form-control" id="modalTotalGasto" name="total_gasto" readonly step="0.01">
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="modalQuantidadeDisponivel" class="form-label">Quantidade Disponível</label>
                                    <input type="number" class="form-control" id="modalQuantidadeDisponivel" name="quantidade_disponivel" step="0.01" required>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                            <button type="submit" class="btn btn-primary">Salvar Alterações</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        
        <!-- Paginação -->
        <nav aria-label="Page navigation">
            <ul class="pagination">
                {% if current_page > 1 %}
                <li class="page-item">
                    <a class="page-link" href="{{ url_for('cadastro_produto.lista_produtos', page=current_page-1, query=request.args.get('query', '') ) }}" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                {% endif %}

                {% for page in range(1, total_pages + 1) %}
                <li class="page-item {% if page == current_page %}active{% endif %}">
                    <a class="page-link" href="{{ url_for('cadastro_produto.lista_produtos', page=page, query=request.args.get('query', '') ) }}">{{ page }}</a>
                </li>
                {% endfor %}
            
                {% if current_page < total_pages %}
                <li class="page-item">
                    <a class="page-link" href="{{ url_for('cadastro_produto.lista_produtos', page=current_page+1, query=request.args.get('query', '') ) }}" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
                {% endif %}
            </ul>
        </nav>
    </body>
{% endblock %}